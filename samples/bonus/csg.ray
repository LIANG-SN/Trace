SBT-raytracer 1.0

/*
Pay some effort to understand the file format if you really want to modify this file :P

Note that this only support box,sphere and cylinder as primitive
*/

camera {
	position = (3,3,3);
	viewdir = (-1,-1,-1);
	aspectratio = 1;
	updir = (0,1,0);
}




point_light
{
	position = (2, 2, 2);
	colour = (1.0, 1.0, 1.0);

}

point_light
{
	position = (2, 2, 0);
	colour = (1.0, 1.0, 1.0);

}


point_light
{
	position = (0, 2, 2);
	colour = (1.0, 1.0, 1.0);

}

scale(0.64,0.64,0.64,
sphere {
 material = { 
  diffuse = (0, 0, 1);
  specular = (0.9,0.4,0.0);
  shininess = 0.6;
 }
} )

box { 
 material = { 
   diffuse = (1,0.3,0.1);
   specular = (0.9,0.4,0.0);
   shininess = 0.6;
  }
}

scale(1.1,0.5,0.5,
box { 
	material = { 
			diffuse = (0,1,0);
			specular = (0.9,0.4,0.0);
			shininess = 0.6;
		}
})	

scale(0.5,1.1,0.5,
box { 
	material = { 
			diffuse = (0,1,0);
			specular = (0.9,0.4,0.0);
			shininess = 0.6;
		}
})

scale(0.5,0.5,1.1,
box { 
	material = { 
			diffuse = (0,1,0);
			specular = (0.9,0.4,0.0);
			shininess = 0.6;
		}
})


//In operation (a,b,c), a,c is the index of the object and b is the instruction. Each tuple only have 3 items in order to form a tree structure.

csg{
	operations=((0,"intersect",1),"minus",((2,"union",3),"union",4));
				material = { 
					diffuse = (1,1,1);
				}
}